digraph "DirectedGraph" {
graph [concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere" [ label="Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere"]
   "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" [ label="Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/Object, <clinit>()V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/Object, <clinit>()V > Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/String, <clinit>()V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/String, <clinit>()V > Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <clinit>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <clinit>()V >> Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/Object, registerNatives()V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/Object, registerNatives()V > Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/String$CaseInsensitiveComparator, <init>(Ljava/lang/String$1;)V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/String$CaseInsensitiveComparator, <init>(Ljava/lang/String$1;)V > Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie, <init>(Ljava/lang/String;)V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/Outie, <init>(Ljava/lang/String;)V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, meenie()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, meenie()V >> Context: Everywhere"]
   "Node: synthetic < Primordial, Ljava/lang/System, <clinit>()V > Context: Everywhere" [ label="Node: synthetic < Primordial, Ljava/lang/System, <clinit>()V > Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, anonymousCoward()Ljava/lang/Object; >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, anonymousCoward()Ljava/lang/Object; >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.Outie>$2, <init>(Ljava/lang/String;)V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.Outie>$2, <init>(Ljava/lang/String;)V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.ABC>$3, <init>(Ljava/lang/Object;)V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.ABC>$3, <init>(Ljava/lang/Object;)V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, supportLocalBusiness()Ljava/lang/Object; >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, supportLocalBusiness()Ljava/lang/Object; >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello()I >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello()I >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello2()I >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello2()I >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, hello()I >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, hello()I >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, setSEVar()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, setSEVar()V >> Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/SecurityManager, <clinit>()V > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/SecurityManager, <clinit>()V > Context: Everywhere"]
   "Node: synthetic < Primordial, Ljava/lang/System, initializeSystemClass()V > Context: Everywhere" [ label="Node: synthetic < Primordial, Ljava/lang/System, initializeSystemClass()V > Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/ABC, <init>(Ljava/lang/Object;)V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/ABC, <init>(Ljava/lang/Object;)V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/Temp, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/Temp, <init>()V >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, <init>()V >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, <init>()V >> Context: Everywhere"]
   "Node: < Primordial, Ljava/lang/SecurityManager, getRootGroup()Ljava/lang/ThreadGroup; > Context: Everywhere" [ label="Node: < Primordial, Ljava/lang/SecurityManager, getRootGroup()Ljava/lang/ThreadGroup; > Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, hashCode()I >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, hashCode()I >> Context: Everywhere"]
   "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, hashCode()I >> Context: Everywhere" [ label="Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, hashCode()I >> Context: Everywhere"]
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere" -> "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <clinit>()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/String, <clinit>()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <clinit>()V >> Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" -> "Node: synthetic < Primordial, Ljava/lang/System, <clinit>()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/SecurityManager, <clinit>()V > Context: Everywhere" 
 "Node: < Primordial, Ljava/lang/Object, <clinit>()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, registerNatives()V > Context: Everywhere" 
 "Node: < Primordial, Ljava/lang/String, <clinit>()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/String$CaseInsensitiveComparator, <init>(Ljava/lang/String$1;)V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie, <init>(Ljava/lang/String;)V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, meenie()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, anonymousCoward()Ljava/lang/Object; >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.Outie>$2, <init>(Ljava/lang/String;)V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.ABC>$3, <init>(Ljava/lang/Object;)V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, supportLocalBusiness()Ljava/lang/Object; >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello()I >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, hello2()I >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, hello()I >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, setSEVar()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, hashCode()I >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, main([Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, hashCode()I >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie, <init>(Ljava/lang/String;)V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie$Innie, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: synthetic < Primordial, Ljava/lang/System, <clinit>()V > Context: Everywhere" -> "Node: synthetic < Primordial, Ljava/lang/System, initializeSystemClass()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, anonymousCoward()Ljava/lang/Object; >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.Outie>$2, <init>(Ljava/lang/String;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/Outie, <init>(Ljava/lang/String;)V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/main([Ljava/lang/String;)V/<anonymous subclass of foo.bar.hello.world.ABC>$3, <init>(Ljava/lang/Object;)V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/ABC, <init>(Ljava/lang/Object;)V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, <init>()V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/Temp, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses, supportLocalBusiness()Ljava/lang/Object; >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing$SubEnclosed, <init>()V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing, <init>()V >> Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2$SubEnclosed2, <init>()V >> Context: Everywhere" -> "Node: <src-method: < Source, Lfoo/bar/hello/world/SuperEnclosing2, <init>()V >> Context: Everywhere" 
 "Node: < Primordial, Ljava/lang/SecurityManager, <clinit>()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: < Primordial, Ljava/lang/SecurityManager, <clinit>()V > Context: Everywhere" -> "Node: < Primordial, Ljava/lang/SecurityManager, getRootGroup()Ljava/lang/ThreadGroup; > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/anonymousCoward()Ljava/lang/Object;/<anonymous subclass of java.lang.Object>$1, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/ABC, <init>(Ljava/lang/Object;)V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/Temp, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 
 "Node: <src-method: < Source, Lfoo/bar/hello/world/InnerClasses/supportLocalBusiness()Ljava/lang/Object;/FooBar, <init>()V >> Context: Everywhere" -> "Node: < Primordial, Ljava/lang/Object, <init>()V > Context: Everywhere" 

}